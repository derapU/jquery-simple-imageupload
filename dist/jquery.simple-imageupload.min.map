{"version":3,"file":"jquery.simple-imageupload.min.js","sources":["jquery.simple-imageupload.js"],"names":["$","SimpleImageupload","fn","simple_imageupload","opts","this","each","$input","init","prototype","default_opts","placeholder","$container","$preview","extend","create_container","create_preview","before","append","bind_events","update_preview","$reader","undefined","FileReader","on","e","css","target","result","removeClass","prop","length","addClass","readAsDataURL","clonecss","attr","self","trigger","jQuery"],"mappings":";;;;CAGE,SAAWA,GACZ,YAEA,IAAIC,EAEJD,GAAEE,GAAGC,mBAAqB,SAAWC,GACpC,MAAOC,MAAKC,KAAM,WACjBD,KAAKF,mBAAqB,GAAIF,GAAmBD,EAAGK,MAAQD,MAI9DH,EAAoB,SAAWM,EAAQH,GACtCC,KAAKG,KAAMD,EAAQH,IAEpBH,EAAkBQ,WACjBC,cACCC,YAAa,yBAEdP,KAAM,KAENQ,WAAY,KACZC,SAAU,KACVN,OAAQ,KAERC,KAAM,SAAWD,EAAQH,GAExBC,KAAKD,KAASJ,EAAEc,UAAYT,KAAKK,aAAcN,GAC/CC,KAAKE,OAASA,EAGdF,KAAKU,mBACLV,KAAKW,iBAILX,KAAKE,OAAOU,OAAQZ,KAAKO,YACzBP,KAAKO,WACHM,OAAQb,KAAKE,QACbW,OAAQb,KAAKQ,UAGfR,KAAKc,eAINC,eAAgB,WACf,GAAIC,GACHR,EAAWR,KAAKQ,QAEZS,UAAcC,aAMnBF,EAAUrB,EAAG,GAAIuB,aAAeC,GAAI,OAAQ,SAAWC,GACtDZ,EACEa,IAAK,mBAAoB,QAAUD,EAAEE,OAAOC,OAAS,MACrDC,YAAa,8BAG4B,IAAvCxB,KAAKE,OAAOuB,KAAM,SAAUC,OAEhClB,EACEa,IAAK,mBAAoB,IACzBM,SAAU,4BAIZX,EAAQ,GAAGY,cAAe5B,KAAKE,OAAOuB,KAAM,SAAU,MAKxDf,iBAAkB,WACjBV,KAAKO,WAAaZ,EAAG,oDACrBK,KAAKO,WAAWsB,SAAU7B,KAAKE,QAC9B,mBACA,QACA,aACA,gBACA,cACA,eACA,WACA,MACA,SACA,OACA,QACA,SACA,WAGFS,eAAgB,WACfX,KAAKQ,SAAWb,EAAG,qEACjBmC,KAAM,mBAAoB9B,KAAKD,KAAKO,cAGvCQ,YAAa,WACZ,GAAIiB,GAAO/B,IAEXA,MAAKQ,SAASW,GAAI,QAAS,WAC1BY,EAAK7B,OAAO8B,QAAS,WAGtBhC,KAAKE,OAAOiB,GAAI,SAAU,WACzBY,EAAKhB,sBAILkB","sourcesContent":["/*! Simple Imageupload - v0.1.0 - 2015-02-19\n* https://github.com/derapU/jquery-simple-imageupload\n* Copyright (c) 2015 Andreas Berghaus; Licensed MIT */\n( function ( $ ) {\n\t\"use strict\";\n\n\tvar SimpleImageupload;\n\n\t$.fn.simple_imageupload = function ( opts ) {\n\t\treturn this.each( function () {\n\t\t\tthis.simple_imageupload = new SimpleImageupload( $( this ), opts );\n\t\t} );\n\t};\n\n\tSimpleImageupload = function ( $input, opts ) {\n\t\tthis.init( $input, opts );\n\t};\n\tSimpleImageupload.prototype = {\n\t\tdefault_opts: {\n\t\t\tplaceholder: 'Click to choose image'\n\t\t},\n\t\topts: null,\n\n\t\t$container: null,\n\t\t$preview: null,\n\t\t$input: null,\n\n\t\tinit: function ( $input, opts ) {\n\t\t\t// configure and save the original field\n\t\t\tthis.opts   = $.extend( {}, this.default_opts, opts );\n\t\t\tthis.$input = $input;\n\n\t\t\t// create elements\n\t\t\tthis.create_container();\n\t\t\tthis.create_preview();\n\n\n\t\t\t// insert container and put input-field inside\n\t\t\tthis.$input.before( this.$container );\n\t\t\tthis.$container\n\t\t\t\t.append( this.$input )\n\t\t\t\t.append( this.$preview );\n\n\t\t\t// bind events\n\t\t\tthis.bind_events();\n\n\t\t},\n\n\t\tupdate_preview: function () {\n\t\t\tvar $reader,\n\t\t\t\t$preview = this.$preview;\n\n\t\t\tif ( undefined === FileReader ) {\n\t\t\t\t// TODO\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// create filereader\n\t\t\t$reader = $( new FileReader() ).on( 'load', function ( e ) {\n\t\t\t\t$preview\n\t\t\t\t\t.css( 'background-image', 'url(\"' + e.target.result + '\")' )\n\t\t\t\t\t.removeClass( 'simple-imageupload-empty' );\n\t\t\t} );\n\n\t\t\tif ( this.$input.prop( 'files' ).length === 0 ) {\n\t\t\t\t// remove the preview\n\t\t\t\t$preview\n\t\t\t\t\t.css( 'background-image', '' )\n\t\t\t\t\t.addClass( 'simple-imageupload-empty' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// we support only a single file per input-field by now\n\t\t\t\t$reader[0].readAsDataURL( this.$input.prop( 'files' )[0] );\n\t\t\t}\n\n\t\t},\n\n\t\tcreate_container: function () {\n\t\t\tthis.$container = $( '<div class=\"simple-imageupload-container\"></div>' );\n\t\t\tthis.$container.clonecss( this.$input, [\n\t\t\t\t'background-color',\n\t\t\t\t'float',\n\t\t\t\t'margin-top',\n\t\t\t\t'margin-bottom',\n\t\t\t\t'margin-left',\n\t\t\t\t'margin-right',\n\t\t\t\t'position',\n\t\t\t\t'top',\n\t\t\t\t'bottom',\n\t\t\t\t'left',\n\t\t\t\t'right',\n\t\t\t\t'height',\n\t\t\t\t'width'\n\t\t\t] );\n\t\t},\n\t\tcreate_preview: function () {\n\t\t\tthis.$preview = $( '<div class=\"simple-imageupload-preview simple-imageupload-empty\">' )\n\t\t\t\t.attr( 'data-placeholder', this.opts.placeholder );\n\t\t},\n\n\t\tbind_events: function () {\n\t\t\tvar self = this;\n\n\t\t\tthis.$preview.on( 'click', function () {\n\t\t\t\tself.$input.trigger( 'click' );\n\t\t\t} );\n\n\t\t\tthis.$input.on( 'change', function () {\n\t\t\t\tself.update_preview();\n\t\t\t} );\n\t\t}\n\t};\n} ( jQuery ) );\n//# sourceMappingURL=jquery.simple-imageupload.js.map"]}