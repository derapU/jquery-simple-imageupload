{"version":3,"file":"jquery.simple-imageupload.min.js","sources":["jquery.simple-imageupload.js"],"names":["$","SimpleImageupload","fn","simple_imageupload","opts","this","each","undefined","revert","$input","init","prototype","default_opts","placeholder","current_image","events","change","initial_value","$container","$preview","val","extend","create_container","create_preview","before","append","bind_events","update_preview","$reader","self","prop","length","find","removeClass","addClass","set_preview_image","FileReader","on","e","target","result","readAsDataURL","url","css","clonecss","attr","trigger","apply","replaceWith","get","jQuery"],"mappings":";;;;CAGE,SAAWA,GACZ,YAEA,IAAIC,EAEJD,GAAEE,GAAGC,mBAAqB,SAAWC,GACpC,MAAOC,MAAKC,KAAM,WAKjB,MAJKC,UAAcF,KAAKF,oBACvBE,KAAKF,mBAAmBK,SAEzBH,KAAKF,mBAAqB,GAAIF,GAAmBD,EAAGK,MAAQD,GACrDC,KAAKF,sBAIdF,EAAoB,SAAWQ,EAAQL,GAEtC,MADAC,MAAKK,KAAMD,EAAQL,GACZC,MAERJ,EAAkBU,WACjBC,cACCC,YAAa,wBACbC,cAAe,KACfC,QACCC,OAAQ,eAGVZ,KAAM,KACNa,cAAe,KAEfC,WAAY,KACZC,SAAU,KACVV,OAAQ,KAERC,KAAM,SAAWD,EAAQL,GACxBC,KAAKY,cAAgBR,EAAOW,MAG5Bf,KAAKD,KAASJ,EAAEqB,QAAQ,KAAUhB,KAAKO,aAAcR,GACrDC,KAAKI,OAASA,EAGdJ,KAAKiB,mBACLjB,KAAKkB,iBAGLlB,KAAKI,OAAOe,OAAQnB,KAAKa,YACzBb,KAAKa,WACHO,OAAQpB,KAAKI,QACbgB,OAAQpB,KAAKc,UAGfd,KAAKqB,eAGNC,eAAgB,WACf,GACCC,GADGC,EAAOxB,IAECA,MAAKc,QAUjB,OAPK,GAAId,KAAKI,OAAOqB,KAAM,SAAUC,OACpC1B,KAAKa,WAAWc,KAAM,YAAaC,YAAa,kBAGhD5B,KAAKa,WAAWc,KAAM,YAAaE,SAAU,kBAGzC3B,SAAcF,KAAKI,OAAOqB,KAAM,SAAU,QACzC,OAASzB,KAAKD,KAAKU,eACvBT,KAAK8B,kBAAmB9B,KAAKD,KAAKU,qBAK/BP,SAAc6B,aAOnBR,EAAU5B,EAAG,GAAIoC,aAAeC,GAAI,OAAQ,SAAWC,GACtDT,EAAKM,kBAAmBG,EAAEC,OAAOC,UAGU,IAAvCnC,KAAKI,OAAOqB,KAAM,SAAUC,OAChCF,EAAKM,oBAILP,EAAQ,GAAGa,cAAepC,KAAKI,OAAOqB,KAAM,SAAU,OAGxDK,kBAAmB,SAAWO,GAC7B,MAAKnC,UAAcmC,MAClBrC,MAAKc,SACJwB,IAAK,mBAAoB,QAAUD,EAAM,MACzCT,YAAa,gCAKf5B,MAAKc,SACJwB,IAAK,mBAAoB,IACzBT,SAAU,6BAGZZ,iBAAkB,WACjBjB,KAAKa,WAAalB,EAAG,oDACrBK,KAAKa,WAAW0B,SAAUvC,KAAKI,QAC9B,mBACA,QACA,aACA,gBACA,cACA,eACA,MACA,SACA,OACA,QACA,SACA,UAEDJ,KAAKa,WAAWO,OAAQ,oDAEzBF,eAAgB,WACflB,KAAKc,SAAWnB,EAAG,qEACjB6C,KAAM,mBAAoBxC,KAAKD,KAAKS,aAEtCR,KAAKsB,kBAGND,YAAa,WACZ,GAAIG,GAAOxB,IAEXA,MAAKc,SAASkB,GAAI,QAAS,WAC1BR,EAAKpB,OAAOqC,QAAS,WAGtBzC,KAAKI,OAAO4B,GAAI,SAAU,WACzBR,EAAKF,iBACLE,EAAKzB,KAAKW,OAAOC,OAAO+B,MAAOlB,GAAO7B,EAAGK,MAAOe,UAGjDf,KAAKa,WAAWc,KAAM,YAAaK,GAAI,QAAS,WAC/CR,EAAKpB,OAAOW,IAAKS,EAAKZ,eACtBY,EAAKF,oBAIPnB,OAAQ,WACPH,KAAKa,WAAW8B,YAAa3C,KAAKI,QAClCJ,KAAKI,OAAOW,IAAKf,KAAKY,eACtBZ,KAAKI,OAAOwC,IAAK,GAAI9C,mBAAqBI,UAGzC2C","sourcesContent":["/*! Simple Imageupload - v0.1.0 - 2015-11-11\n* https://github.com/derapU/jquery-simple-imageupload\n* Copyright (c) 2015 Andreas Berghaus; Licensed MIT */\n( function ( $ ) {\n\t\"use strict\";\n\n\tvar SimpleImageupload;\n\n\t$.fn.simple_imageupload = function ( opts ) {\n\t\treturn this.each( function () {\n\t\t\tif ( undefined !== this.simple_imageupload ) {\n\t\t\t\tthis.simple_imageupload.revert();\n\t\t\t}\n\t\t\tthis.simple_imageupload = new SimpleImageupload( $( this ), opts );\n\t\t\treturn this.simple_imageupload;\n\t\t} );\n\t};\n\n\tSimpleImageupload = function ( $input, opts ) {\n\t\tthis.init( $input, opts );\n\t\treturn this;\n\t};\n\tSimpleImageupload.prototype = {\n\t\tdefault_opts: {\n\t\t\tplaceholder: 'Click to choose image',\n\t\t\tcurrent_image: null,\n\t\t\tevents: {\n\t\t\t\tchange: function () {}\n\t\t\t}\n\t\t},\n\t\topts: null,\n\t\tinitial_value: null,\n\n\t\t$container: null,\n\t\t$preview: null,\n\t\t$input: null,\n\n\t\tinit: function ( $input, opts ) {\n\t\t\tthis.initial_value = $input.val();\n\n\t\t\t// configure and save the original field\n\t\t\tthis.opts   = $.extend( true, {}, this.default_opts, opts );\n\t\t\tthis.$input = $input;\n\n\t\t\t// create elements\n\t\t\tthis.create_container();\n\t\t\tthis.create_preview();\n\n\t\t\t// insert container and put input-field inside\n\t\t\tthis.$input.before( this.$container );\n\t\t\tthis.$container\n\t\t\t\t.append( this.$input )\n\t\t\t\t.append( this.$preview );\n\n\t\t\t// bind events\n\t\t\tthis.bind_events();\n\t\t},\n\n\t\tupdate_preview: function () {\n\t\t\tvar self = this,\n\t\t\t\t$reader,\n\t\t\t\t$preview = this.$preview;\n\n\t\t\t// display revert-icon\n\t\t\tif ( 0 < this.$input.prop( 'files' ).length ) {\n\t\t\t\tthis.$container.find( '._revert' ).removeClass( '_revert-hidden' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.$container.find( '._revert' ).addClass( '_revert-hidden' );\n\t\t\t}\n\n\t\t\tif ( undefined === this.$input.prop( 'files' )[0] ) {\n\t\t\t\tif ( null !== this.opts.current_image ) {\n\t\t\t\t\tthis.set_preview_image( this.opts.current_image );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( undefined === FileReader ) {\n\t\t\t\t// TODO:\n\t\t\t\t// preview not available\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// create filereader\n\t\t\t$reader = $( new FileReader() ).on( 'load', function ( e ) {\n\t\t\t\tself.set_preview_image( e.target.result );\n\t\t\t} );\n\n\t\t\tif ( this.$input.prop( 'files' ).length === 0 ) {\n\t\t\t\tself.set_preview_image();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// we support only a single file per input-field by now\n\t\t\t\t$reader[0].readAsDataURL( this.$input.prop( 'files' )[0] );\n\t\t\t}\n\t\t},\n\t\tset_preview_image: function ( url ) {\n\t\t\tif ( undefined !== url ) {\n\t\t\t\tthis.$preview\n\t\t\t\t.css( 'background-image', 'url(\"' + url + '\")' )\n\t\t\t\t.removeClass( 'simple-imageupload-empty' );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// remove the preview\n\t\t\tthis.$preview\n\t\t\t.css( 'background-image', '' )\n\t\t\t.addClass( 'simple-imageupload-empty' );\n\t\t},\n\n\t\tcreate_container: function () {\n\t\t\tthis.$container = $( '<div class=\"simple-imageupload-container\"></div>' );\n\t\t\tthis.$container.clonecss( this.$input, [\n\t\t\t\t'background-color',\n\t\t\t\t'float',\n\t\t\t\t'margin-top',\n\t\t\t\t'margin-bottom',\n\t\t\t\t'margin-left',\n\t\t\t\t'margin-right',\n\t\t\t\t'top',\n\t\t\t\t'bottom',\n\t\t\t\t'left',\n\t\t\t\t'right',\n\t\t\t\t'height',\n\t\t\t\t'width'\n\t\t\t] );\n\t\t\tthis.$container.append( '<a href=\"#\" class=\"_revert _revert-hidden\"></a>' );\n\t\t},\n\t\tcreate_preview: function () {\n\t\t\tthis.$preview = $( '<div class=\"simple-imageupload-preview simple-imageupload-empty\">' )\n\t\t\t\t.attr( 'data-placeholder', this.opts.placeholder );\n\n\t\t\tthis.update_preview();\n\t\t},\n\n\t\tbind_events: function () {\n\t\t\tvar self = this;\n\n\t\t\tthis.$preview.on( 'click', function () {\n\t\t\t\tself.$input.trigger( 'click' );\n\t\t\t} );\n\n\t\t\tthis.$input.on( 'change', function () {\n\t\t\t\tself.update_preview();\n\t\t\t\tself.opts.events.change.apply( self, [$( this ).val()] );\n\t\t\t} );\n\n\t\t\tthis.$container.find( '._revert' ).on( 'click', function () {\n\t\t\t\tself.$input.val( self.initial_value );\n\t\t\t\tself.update_preview();\n\t\t\t} );\n\t\t},\n\n\t\trevert: function () {\n\t\t\tthis.$container.replaceWith( this.$input );\n\t\t\tthis.$input.val( this.initial_value );\n\t\t\tthis.$input.get( 0 ).simple_imageupload = undefined;\n\t\t}\n\t};\n} ( jQuery ) );\n\n//# sourceMappingURL=jquery.simple-imageupload.js.map"]}